name: Deploy to Server

on:
  push:
    branches:
      - production

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup deployment payload
        id: payload
        run: |
          # Create a simple JSON payload with only commit number and timestamp
          PAYLOAD=$(jq -nc \
            --arg commit_number "${{ github.sha }}" \
            --arg timestamp "$(date -u +%Y-%m-%dT%H:%M:%SZ)" \
            '{
              "commit_number": $commit_number,
              "timestamp": $timestamp
            }')

          echo "payload=$PAYLOAD" >> $GITHUB_OUTPUT
          echo "Payload prepared for deployment"

      - name: Generate webhook signature
        id: signature
        run: |
          PAYLOAD='${{ steps.payload.outputs.payload }}'
          SIGNATURE=$(echo -n "$PAYLOAD" | openssl dgst -sha256 -hmac "${{ secrets.WEBHOOK_SECRET }}" | awk '{print "sha256="$2}')
          echo "signature=$SIGNATURE" >> $GITHUB_OUTPUT
          echo "Signature generated"

      - name: Deploy to server
        id: deploy
        run: |
          RESPONSE=$(curl -s -w "\nHTTP_STATUS:%{http_code}\nTIME_TOTAL:%{time_total}" \
            -X POST https://phantom-go.kraftartz.space/webhook/deploy \
            -H "Content-Type: application/json" \
            -H "X-Hub-Signature-256: ${{ steps.signature.outputs.signature }}" \
            -H "User-Agent: GitHub-Actions/${{ github.repository }}" \
            -d '${{ steps.payload.outputs.payload }}' \
            --max-time 300 \
            --retry 3 \
            --retry-delay 5)

          # Extract HTTP status and response body
          HTTP_STATUS=$(echo "$RESPONSE" | grep "HTTP_STATUS:" | cut -d: -f2)
          TIME_TOTAL=$(echo "$RESPONSE" | grep "TIME_TOTAL:" | cut -d: -f2)
          RESPONSE_BODY=$(echo "$RESPONSE" | sed '/HTTP_STATUS:/d' | sed '/TIME_TOTAL:/d')

          echo "HTTP Status: $HTTP_STATUS"
          echo "Response Time: ${TIME_TOTAL}s"
          echo "Response Body: $RESPONSE_BODY"

          # Check if deployment was successful
          if [ "$HTTP_STATUS" -eq 200 ]; then
            echo "✅ Deployment successful!"
            echo "status=success" >> $GITHUB_OUTPUT
          elif [ "$HTTP_STATUS" -eq 429 ]; then
            echo "⚠️ Rate limited - too many deployments"
            echo "status=rate_limited" >> $GITHUB_OUTPUT
            exit 1
          elif [ "$HTTP_STATUS" -eq 401 ]; then
            echo "❌ Authentication failed - check webhook secret"
            echo "status=auth_failed" >> $GITHUB_OUTPUT
            exit 1
          elif [ "$HTTP_STATUS" -eq 408 ]; then
            echo "⏰ Deployment timeout"
            echo "status=timeout" >> $GITHUB_OUTPUT
            exit 1
          else
            echo "❌ Deployment failed with status $HTTP_STATUS"
            echo "status=failed" >> $GITHUB_OUTPUT
            exit 1
          fi
